<?xml version="1.0"?>
<configuration>

  <configSections>

    <section name="EApp" type="EApp.Core.Configuration.EAppConfigurationSection, EApp.Core"/>

    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration"/>

  </configSections>

  <connectionStrings>

    <clear />

    <add name="SqlServer"
         providerName="EApp.Data.SqlServer.SqlServerDbProvider, EApp.Data"
         connectionString="server=localhost\OSPTTEST;database=EXPRESSLIFE;User ID=sa;Password=3Edcvfr4567ujmnb"/>

    <add name="LocalSqlServer" connectionString="data source=.\SQLEXPRESS;Integrated Security=SSPI;AttachDBFilename=|DataDirectory|aspnetdb.mdf;User Instance=true" providerName="System.Data.SqlClient"/>

  </connectionStrings>

  <EApp>

    <application provider="EApp.Core.Application.App, EApp.Core" />

    <objectContainer provider="EApp.Core.IoC.UnityObjectContainerFactory, EApp.Core" initFromConfigFile="true" sectionName="unity"/>

    <serializationFormats default="Json">

      <format name="XML" type="EApp.Common.Serialization.ObjectXmlSerializer, EApp.Common"/>

      <format name="Json" type="EApp.Common.Serialization.ObjectJsonSerializer, EApp.Common"/>

    </serializationFormats>

    <cacheManagers default="Redis">

      <cacheManager name="Redis" type="EApp.Common.Cache.RedisManager, EApp.Common"/>

      <cacheManager name="Memcache" type="EApp.Common.Cache.MemcacheManager, EApp.Common"/>

    </cacheManagers>

    <redis writeHosts="127.0.0.1:6379" readOnlyHosts="127.0.0.1:6379" maxWritePoolSize="60"
           maxReadPoolSize="60" autoStart="true" timeOutSeconds="3600" >
    </redis>

    <handlers>
      <handler name="PostPublishCommand" type="Xpress.Chat.Commands.PostPublishCommandHandler, Xpress.Chat.Commands" kind="Command"/>
    </handlers>

  </EApp>

  <unity>

    <container>

      <register type="EApp.Domain.Core.Commands.ICommandHandlerProvider, EApp.Domain.Core"
                mapTo="EApp.Domain.Core.Commands.ConfigSourceCommandHandlerProvider, EApp.Domain.Core">
        <lifetime type="external" />
      </register>

      <register type="EApp.Domain.Core.Commands.ICommandDispatcher, EApp.Domain.Core"
                mapTo="EApp.Domain.Core.Commands.CommandDispatcher, EApp.Domain.Core" >
        <lifetime type="singleton" />
      </register>

      <register type="EApp.Domain.Core.Bus.ICommandBus, EApp.Domain.Core"
                mapTo="EApp.Domain.Core.Bus.CommandBus, EApp.Domain.Core" >
      </register>

      <register type="Xpress.Chat.ServiceContracts.IPostCommandService, Xpress.Chat.ServiceContracts"
                mapTo="Xpress.Chat.Application.PostCommandService, Xpress.Chat.Application" >
      </register>

      <register type="EApp.Domain.Core.Repositories.IRepositoryContext, EApp.Domain.Core"
                mapTo="EApp.Repositories.SQL.SqlRepositoryContext, EApp.Repositories.SQL">
        <lifetime type="external" />
      </register>

      <register type="Xpress.Chat.Domain.Repositories.ITopicRepository, Xpress.Chat.Domain"
                mapTo="Xpress.Chat.Repositories.TopicRepository, Xpress.Chat.Repositories" />

      <register type="Xpress.Chat.Domain.Repositories.IUserRepository, Xpress.Chat.Domain"
                mapTo="Xpress.Chat.Repositories.UserRepository, Xpress.Chat.Repositories" />

      <register type="Xpress.Chat.Domain.Repositories.IPostRepository, Xpress.Chat.Domain"
                mapTo="Xpress.Chat.Repositories.PostRepository, Xpress.Chat.Repositories">
        <lifetime type="external" />
      </register>

      <register type="Xpress.Chat.Domain.Repositories.ICommentRepository, Xpress.Chat.Domain"
                mapTo="Xpress.Chat.Repositories.CommentRepository, Xpress.Chat.Repositories" />

      <register type="Xpress.Chat.Domain.Services.IDomainService, Xpress.Chat.Domain"
                mapTo="Xpress.Chat.Domain.Services.DomainService, Xpress.Chat.Domain" />

      <register type="Xpress.Chat.ServiceContracts.IPostService, Xpress.Chat.ServiceContracts"
                mapTo="Xpress.Chat.Application.PostService, Xpress.Chat.Application" />

      <register type="EApp.Domain.Core.Events.IDomainEventHandler`1[[Xpress.Chat.Domain.Events.PostDomainEvent, Xpress.Chat.Domain]], EApp.Domain.Core"
                mapTo="Xpress.Chat.Domain.Events.PostDomainEventHandler, Xpress.Chat.Domain">
      </register>

    </container>

  </unity>

  <system.web>
    <compilation debug="true" targetFramework="4.0" />
  </system.web>

  <system.serviceModel>
    <services>
      <service name="Xpress.Chat.Services.QueryService" behaviorConfiguration="QueryServiceBehavior">

        <endpoint binding="webHttpBinding" contract="Xpress.Chat.ServiceContracts.IQueryService"/>

      </service>
    </services>

    <behaviors>

      <endpointBehaviors>
        <behavior>
          <webHttp helpEnabled="true"/>
        </behavior>
      </endpointBehaviors>

      <serviceBehaviors>
        <behavior name="QueryServiceBehavior">
          <!-- To avoid disclosing metadata information, set the value below to false and remove the metadata endpoint above before deployment -->
          <serviceMetadata httpGetEnabled="true"/>
          <!-- To receive exception details in faults for debugging purposes, set the value below to true.  Set to false before deployment to avoid disclosing exception information -->
          <serviceDebug includeExceptionDetailInFaults="true"/>
        </behavior>
      </serviceBehaviors>
    </behaviors>

    <serviceHostingEnvironment aspNetCompatibilityEnabled="true"/>

  </system.serviceModel>

  <system.webServer>
    <modules runAllManagedModulesForAllRequests="true"/>
  </system.webServer>

</configuration>
