//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Eagle.Web.Core.Configuration
{


    /// <summary>
    /// The RouteMappingElement Configuration Element.
    /// </summary>
    public partial class RouteMappingElement : global::System.Configuration.ConfigurationElement
    {

        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion

        #region Name Property
        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string NamePropertyName = "name";

        /// <summary>
        /// Gets or sets the Name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The Name.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Eagle.Web.Core.Configuration.RouteMappingElement.NamePropertyName, IsRequired = true, IsKey = true, IsDefaultCollection = false)]
        public virtual string Name
        {
            get
            {
                return ((string)(base[global::Eagle.Web.Core.Configuration.RouteMappingElement.NamePropertyName]));
            }
            set
            {
                base[global::Eagle.Web.Core.Configuration.RouteMappingElement.NamePropertyName] = value;
            }
        }
        #endregion

        #region Url Property
        /// <summary>
        /// The XML name of the <see cref="Url"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string UrlPropertyName = "url";

        /// <summary>
        /// Gets or sets the Url.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The Url.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Eagle.Web.Core.Configuration.RouteMappingElement.UrlPropertyName, IsRequired = true, IsKey = false, IsDefaultCollection = false)]
        public virtual string Url
        {
            get
            {
                return ((string)(base[global::Eagle.Web.Core.Configuration.RouteMappingElement.UrlPropertyName]));
            }
            set
            {
                base[global::Eagle.Web.Core.Configuration.RouteMappingElement.UrlPropertyName] = value;
            }
        }
        #endregion

        #region PhysicalPath Property
        /// <summary>
        /// The XML name of the <see cref="PhysicalFile"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string PhysicalFilePropertyName = "physicalFile";

        /// <summary>
        /// Gets or sets the PhysicalPath.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The PhysicalPath.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Eagle.Web.Core.Configuration.RouteMappingElement.PhysicalFilePropertyName, IsRequired = true, IsKey = false, IsDefaultCollection = false)]
        public virtual string PhysicalFile
        {
            get
            {
                return ((string)(base[global::Eagle.Web.Core.Configuration.RouteMappingElement.PhysicalFilePropertyName]));
            }
            set
            {
                base[global::Eagle.Web.Core.Configuration.RouteMappingElement.PhysicalFilePropertyName] = value;
            }
        }
        #endregion

        #region Defaults Property
        /// <summary>
        /// The XML name of the <see cref="Defaults"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string DefaultsPropertyName = "defaults";

        /// <summary>
        /// Gets or sets the Defaults.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The Defaults.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Eagle.Web.Core.Configuration.RouteMappingElement.DefaultsPropertyName, IsRequired = false, IsKey = false, IsDefaultCollection = false)]
        public virtual global::Eagle.Web.Core.Configuration.DefaultElementCollection Defaults
        {
            get
            {
                return ((global::Eagle.Web.Core.Configuration.DefaultElementCollection)(base[global::Eagle.Web.Core.Configuration.RouteMappingElement.DefaultsPropertyName]));
            }
            set
            {
                base[global::Eagle.Web.Core.Configuration.RouteMappingElement.DefaultsPropertyName] = value;
            }
        }
        #endregion

        #region Constraints Property
        /// <summary>
        /// The XML name of the <see cref="Constraints"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string ConstraintsPropertyName = "constraints";

        /// <summary>
        /// Gets or sets the Constraints.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The Constraints.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Eagle.Web.Core.Configuration.RouteMappingElement.ConstraintsPropertyName, IsRequired = false, IsKey = false, IsDefaultCollection = false)]
        public virtual global::Eagle.Web.Core.Configuration.ConstraintElementCollection Constraints
        {
            get
            {
                return ((global::Eagle.Web.Core.Configuration.ConstraintElementCollection)(base[global::Eagle.Web.Core.Configuration.RouteMappingElement.ConstraintsPropertyName]));
            }
            set
            {
                base[global::Eagle.Web.Core.Configuration.RouteMappingElement.ConstraintsPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Eagle.Web.Core.Configuration
{


    /// <summary>
    /// A collection of RouteMappingElement instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::Eagle.Web.Core.Configuration.RouteMappingElement), CollectionType = global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName = global::Eagle.Web.Core.Configuration.RouteMappingElementCollection.RouteMappingElementPropertyName)]
    public partial class RouteMappingElementCollection : global::System.Configuration.ConfigurationElementCollection
    {

        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::Eagle.Web.Core.Configuration.RouteMappingElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string RouteMappingElementPropertyName = "route";
        #endregion

        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }

        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override string ElementName
        {
            get
            {
                return global::Eagle.Web.Core.Configuration.RouteMappingElementCollection.RouteMappingElementPropertyName;
            }
        }

        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::Eagle.Web.Core.Configuration.RouteMappingElementCollection.RouteMappingElementPropertyName);
        }

        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::Eagle.Web.Core.Configuration.RouteMappingElement)(element)).Name;
        }

        /// <summary>
        /// Creates a new <see cref="global::Eagle.Web.Core.Configuration.RouteMappingElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::Eagle.Web.Core.Configuration.RouteMappingElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::Eagle.Web.Core.Configuration.RouteMappingElement();
        }
        #endregion

        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::Eagle.Web.Core.Configuration.RouteMappingElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Eagle.Web.Core.Configuration.RouteMappingElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::Eagle.Web.Core.Configuration.RouteMappingElement this[int index]
        {
            get
            {
                return ((global::Eagle.Web.Core.Configuration.RouteMappingElement)(base.BaseGet(index)));
            }
        }

        /// <summary>
        /// Gets the <see cref="global::Eagle.Web.Core.Configuration.RouteMappingElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::Eagle.Web.Core.Configuration.RouteMappingElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::Eagle.Web.Core.Configuration.RouteMappingElement this[object name]
        {
            get
            {
                return ((global::Eagle.Web.Core.Configuration.RouteMappingElement)(base.BaseGet(name)));
            }
        }
        #endregion

        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::Eagle.Web.Core.Configuration.RouteMappingElement"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="route">The <see cref="global::Eagle.Web.Core.Configuration.RouteMappingElement"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public void Add(global::Eagle.Web.Core.Configuration.RouteMappingElement route)
        {
            base.BaseAdd(route);
        }
        #endregion

        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::Eagle.Web.Core.Configuration.RouteMappingElement"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="route">The <see cref="global::Eagle.Web.Core.Configuration.RouteMappingElement"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public void Remove(global::Eagle.Web.Core.Configuration.RouteMappingElement route)
        {
            base.BaseRemove(this.GetElementKey(route));
        }
        #endregion

        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::Eagle.Web.Core.Configuration.RouteMappingElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Eagle.Web.Core.Configuration.RouteMappingElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::Eagle.Web.Core.Configuration.RouteMappingElement GetItemAt(int index)
        {
            return ((global::Eagle.Web.Core.Configuration.RouteMappingElement)(base.BaseGet(index)));
        }

        /// <summary>
        /// Gets the <see cref="global::Eagle.Web.Core.Configuration.RouteMappingElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::Eagle.Web.Core.Configuration.RouteMappingElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::Eagle.Web.Core.Configuration.RouteMappingElement GetItemByKey(string name)
        {
            return ((global::Eagle.Web.Core.Configuration.RouteMappingElement)(base.BaseGet(((object)(name)))));
        }
        #endregion

        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace Eagle.Web.Core.Configuration
{


    /// <summary>
    /// The RouteConfigurationSection Configuration Section.
    /// </summary>
    public partial class RouteConfigurationSection : global::System.Configuration.ConfigurationSection
    {

        #region Singleton Instance
        /// <summary>
        /// The XML name of the RouteConfigurationSection Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string RouteConfigurationSectionSectionName = "routeConfig";

        /// <summary>
        /// Gets the RouteConfigurationSection instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public static global::Eagle.Web.Core.Configuration.RouteConfigurationSection Instance
        {
            get
            {
                return ((global::Eagle.Web.Core.Configuration.RouteConfigurationSection)(global::System.Configuration.ConfigurationManager.GetSection(global::Eagle.Web.Core.Configuration.RouteConfigurationSection.RouteConfigurationSectionSectionName)));
            }
        }
        #endregion

        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string XmlnsPropertyName = "xmlns";

        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Eagle.Web.Core.Configuration.RouteConfigurationSection.XmlnsPropertyName, IsRequired = false, IsKey = false, IsDefaultCollection = false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::Eagle.Web.Core.Configuration.RouteConfigurationSection.XmlnsPropertyName]));
            }
        }
        #endregion

        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion

        #region Routes Property
        /// <summary>
        /// The XML name of the <see cref="Routes"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string RoutesPropertyName = "routes";

        /// <summary>
        /// Gets or sets the Routes.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The Routes.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Eagle.Web.Core.Configuration.RouteConfigurationSection.RoutesPropertyName, IsRequired = false, IsKey = false, IsDefaultCollection = false)]
        public virtual global::Eagle.Web.Core.Configuration.RouteMappingElementCollection Routes
        {
            get
            {
                return ((global::Eagle.Web.Core.Configuration.RouteMappingElementCollection)(base[global::Eagle.Web.Core.Configuration.RouteConfigurationSection.RoutesPropertyName]));
            }
            set
            {
                base[global::Eagle.Web.Core.Configuration.RouteConfigurationSection.RoutesPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Eagle.Web.Core.Configuration
{


    /// <summary>
    /// A collection of ParametertElement instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::Eagle.Web.Core.Configuration.ParametertElement), CollectionType = global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName = global::Eagle.Web.Core.Configuration.DefaultElementCollection.ParametertElementPropertyName)]
    public partial class DefaultElementCollection : global::System.Configuration.ConfigurationElementCollection
    {

        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::Eagle.Web.Core.Configuration.ParametertElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string ParametertElementPropertyName = "param";
        #endregion

        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }

        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override string ElementName
        {
            get
            {
                return global::Eagle.Web.Core.Configuration.DefaultElementCollection.ParametertElementPropertyName;
            }
        }

        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::Eagle.Web.Core.Configuration.DefaultElementCollection.ParametertElementPropertyName);
        }

        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::Eagle.Web.Core.Configuration.ParametertElement)(element)).Name;
        }

        /// <summary>
        /// Creates a new <see cref="global::Eagle.Web.Core.Configuration.ParametertElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::Eagle.Web.Core.Configuration.ParametertElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::Eagle.Web.Core.Configuration.ParametertElement();
        }
        #endregion

        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::Eagle.Web.Core.Configuration.ParametertElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Eagle.Web.Core.Configuration.ParametertElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::Eagle.Web.Core.Configuration.ParametertElement this[int index]
        {
            get
            {
                return ((global::Eagle.Web.Core.Configuration.ParametertElement)(base.BaseGet(index)));
            }
        }

        /// <summary>
        /// Gets the <see cref="global::Eagle.Web.Core.Configuration.ParametertElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::Eagle.Web.Core.Configuration.ParametertElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::Eagle.Web.Core.Configuration.ParametertElement this[object name]
        {
            get
            {
                return ((global::Eagle.Web.Core.Configuration.ParametertElement)(base.BaseGet(name)));
            }
        }
        #endregion

        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::Eagle.Web.Core.Configuration.ParametertElement"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="param">The <see cref="global::Eagle.Web.Core.Configuration.ParametertElement"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public void Add(global::Eagle.Web.Core.Configuration.ParametertElement param)
        {
            base.BaseAdd(param);
        }
        #endregion

        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::Eagle.Web.Core.Configuration.ParametertElement"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="param">The <see cref="global::Eagle.Web.Core.Configuration.ParametertElement"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public void Remove(global::Eagle.Web.Core.Configuration.ParametertElement param)
        {
            base.BaseRemove(this.GetElementKey(param));
        }
        #endregion

        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::Eagle.Web.Core.Configuration.ParametertElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Eagle.Web.Core.Configuration.ParametertElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::Eagle.Web.Core.Configuration.ParametertElement GetItemAt(int index)
        {
            return ((global::Eagle.Web.Core.Configuration.ParametertElement)(base.BaseGet(index)));
        }

        /// <summary>
        /// Gets the <see cref="global::Eagle.Web.Core.Configuration.ParametertElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::Eagle.Web.Core.Configuration.ParametertElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::Eagle.Web.Core.Configuration.ParametertElement GetItemByKey(string name)
        {
            return ((global::Eagle.Web.Core.Configuration.ParametertElement)(base.BaseGet(((object)(name)))));
        }
        #endregion

        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace Eagle.Web.Core.Configuration
{


    /// <summary>
    /// A collection of ParametertElement instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::Eagle.Web.Core.Configuration.ParametertElement), CollectionType = global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName = global::Eagle.Web.Core.Configuration.ConstraintElementCollection.ParametertElementPropertyName)]
    public partial class ConstraintElementCollection : global::System.Configuration.ConfigurationElementCollection
    {

        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::Eagle.Web.Core.Configuration.ParametertElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string ParametertElementPropertyName = "param";
        #endregion

        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }

        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override string ElementName
        {
            get
            {
                return global::Eagle.Web.Core.Configuration.ConstraintElementCollection.ParametertElementPropertyName;
            }
        }

        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::Eagle.Web.Core.Configuration.ConstraintElementCollection.ParametertElementPropertyName);
        }

        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::Eagle.Web.Core.Configuration.ParametertElement)(element)).Name;
        }

        /// <summary>
        /// Creates a new <see cref="global::Eagle.Web.Core.Configuration.ParametertElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::Eagle.Web.Core.Configuration.ParametertElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::Eagle.Web.Core.Configuration.ParametertElement();
        }
        #endregion

        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::Eagle.Web.Core.Configuration.ParametertElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Eagle.Web.Core.Configuration.ParametertElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::Eagle.Web.Core.Configuration.ParametertElement this[int index]
        {
            get
            {
                return ((global::Eagle.Web.Core.Configuration.ParametertElement)(base.BaseGet(index)));
            }
        }

        /// <summary>
        /// Gets the <see cref="global::Eagle.Web.Core.Configuration.ParametertElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::Eagle.Web.Core.Configuration.ParametertElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::Eagle.Web.Core.Configuration.ParametertElement this[object name]
        {
            get
            {
                return ((global::Eagle.Web.Core.Configuration.ParametertElement)(base.BaseGet(name)));
            }
        }
        #endregion

        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::Eagle.Web.Core.Configuration.ParametertElement"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="param">The <see cref="global::Eagle.Web.Core.Configuration.ParametertElement"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public void Add(global::Eagle.Web.Core.Configuration.ParametertElement param)
        {
            base.BaseAdd(param);
        }
        #endregion

        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::Eagle.Web.Core.Configuration.ParametertElement"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="param">The <see cref="global::Eagle.Web.Core.Configuration.ParametertElement"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public void Remove(global::Eagle.Web.Core.Configuration.ParametertElement param)
        {
            base.BaseRemove(this.GetElementKey(param));
        }
        #endregion

        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::Eagle.Web.Core.Configuration.ParametertElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Eagle.Web.Core.Configuration.ParametertElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::Eagle.Web.Core.Configuration.ParametertElement GetItemAt(int index)
        {
            return ((global::Eagle.Web.Core.Configuration.ParametertElement)(base.BaseGet(index)));
        }

        /// <summary>
        /// Gets the <see cref="global::Eagle.Web.Core.Configuration.ParametertElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::Eagle.Web.Core.Configuration.ParametertElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::Eagle.Web.Core.Configuration.ParametertElement GetItemByKey(string name)
        {
            return ((global::Eagle.Web.Core.Configuration.ParametertElement)(base.BaseGet(((object)(name)))));
        }
        #endregion

        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace Eagle.Web.Core.Configuration
{


    /// <summary>
    /// The ParametertElement Configuration Element.
    /// </summary>
    public partial class ParametertElement : global::System.Configuration.ConfigurationElement
    {

        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion

        #region Name Property
        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string NamePropertyName = "name";

        /// <summary>
        /// Gets or sets the Name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The Name.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Eagle.Web.Core.Configuration.ParametertElement.NamePropertyName, IsRequired = true, IsKey = true, IsDefaultCollection = false)]
        public virtual string Name
        {
            get
            {
                return ((string)(base[global::Eagle.Web.Core.Configuration.ParametertElement.NamePropertyName]));
            }
            set
            {
                base[global::Eagle.Web.Core.Configuration.ParametertElement.NamePropertyName] = value;
            }
        }
        #endregion

        #region Value Property
        /// <summary>
        /// The XML name of the <see cref="Value"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string ValuePropertyName = "value";

        /// <summary>
        /// Gets or sets the Value.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The Value.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Eagle.Web.Core.Configuration.ParametertElement.ValuePropertyName, IsRequired = true, IsKey = false, IsDefaultCollection = false)]
        public virtual string Value
        {
            get
            {
                return ((string)(base[global::Eagle.Web.Core.Configuration.ParametertElement.ValuePropertyName]));
            }
            set
            {
                base[global::Eagle.Web.Core.Configuration.ParametertElement.ValuePropertyName] = value;
            }
        }
        #endregion
    }
}